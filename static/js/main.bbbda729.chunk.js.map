{"version":3,"sources":["App.js","index.js"],"names":["generator","rough","strokeSize","strokeColor","setBlack","setRed","setBlue","setGreen","setYellow","setWhite","smallStroke","mediumStroke","bigStroke","createElement","id","x1","y1","x2","y2","type","roughElement","line","roughness","strokeWidth","stroke","rectangle","ellipse","nearPoint","x","y","name","Math","abs","positionWithinElement","element","topLeft","topRight","bottomLeft","bottomRight","a","b","c","offset","distance","start","end","inside","sqrt","pow","getElementAtPosition","elements","map","position","find","resetCanvas","window","confirm","location","reload","App","initialState","useState","index","setIndex","history","setHistory","action","overwrite","newState","historyCopy","updatedState","slice","prevState","length","useHistory","setElements","undo","redo","setAction","tool","setTool","selectedElement","setSelectedElement","useLayoutEffect","canvas","document","getElementById","getContext","clearRect","width","height","roughCanvas","forEach","draw","useEffect","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","updateElement","updatedElement","elementsCopy","Fragment","className","innerWidth","innerHeight","onMouseDown","clientX","clientY","offsetX","offsetY","onMouseMove","target","style","cursor","cursorForPosition","newX1","newY1","coordinates","resizedCoordinates","onMouseUp","minX","min","maxX","max","adjustElementCoordinates","autoFocus","checked","onChange","alt","src","onClick","ReactDOM","render"],"mappings":"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","file":"static/js/main.bbbda729.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport \"./App.css\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst generator = rough.generator();\n\nlet strokeSize = \"1.5\";\nlet strokeColor = \"#000000\";\n\nfunction setBlack() {\n  strokeColor = \"#000000\";\n}\n\nfunction setRed() {\n  strokeColor = \"#c92a2a\";\n}\n\nfunction setBlue() {\n  strokeColor = \"#364fc7\";\n}\n\nfunction setGreen() {\n  strokeColor = \"#5c940d\";\n}\n\nfunction setYellow() {\n  strokeColor = \"#f6f631\";\n}\n\nfunction setWhite() {\n  strokeColor = \"#ffffff\";\n}\n\nfunction smallStroke() {\n  strokeSize = \"1.5\";\n}\n\nfunction mediumStroke() {\n  strokeSize = \"3\";\n}\n\nfunction bigStroke() {\n  strokeSize = \"4.5\";\n}\n\nexport const createElement = (id, x1, y1, x2, y2, type) => {\n  let roughElement;\n  if (type === \"line\") {\n    roughElement = generator.line(x1, y1, x2, y2, {\n      roughness: 1.2,\n      strokeWidth: strokeSize,\n      stroke: strokeColor,\n    });\n  } else if (type === \"rectangle\") {\n    roughElement = generator.rectangle(x1, y1, x2 - x1, y2 - y1, {\n      roughness: 1.2,\n      strokeWidth: strokeSize,\n      stroke: strokeColor,\n    });\n  } else if (type === \"circle\") {\n    roughElement = generator.ellipse(\n      (x1 + x2) / 2,\n      (y1 + y2) / 2,\n      x2 - x1,\n      y2 - y1,\n      {\n        roughness: 1.2,\n        strokeWidth: strokeSize,\n        stroke: strokeColor,\n      }\n    );\n  } else if (type === \"pen\") {\n    roughElement = generator.line(x1, y1, x2, y2, {\n      roughness: 1.2,\n      strokeWidth: strokeSize,\n      stroke: strokeColor,\n    });\n  }\n  return { id, x1, y1, x2, y2, type, roughElement };\n};\n\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\n\nconst positionWithinElement = (x, y, element) => {\n  const { type, x1, x2, y1, y2 } = element;\n  if (type === \"rectangle\") {\n    const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n    const topRight = nearPoint(x, y, x2, y1, \"tr\");\n    const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n    const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n    const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n    return topLeft || topRight || bottomLeft || bottomRight || inside;\n  } else {\n    const a = { x: x1, y: y1 };\n    const b = { x: x2, y: y2 };\n    const c = { x, y };\n    const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n    const start = nearPoint(x, y, x1, y1, \"start\");\n    const end = nearPoint(x, y, x2, y2, \"end\");\n    const inside = Math.abs(offset) < 0.5 ? \"inside\" : null;\n    return start || end || inside;\n  }\n};\n\nconst distance = (a, b) =>\n  Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\nconst getElementAtPosition = (x, y, elements) => {\n  return elements\n    .map((element) => ({\n      ...element,\n      position: positionWithinElement(x, y, element),\n    }))\n    .find((element) => element.position !== null);\n};\n\nconst adjustElementCoordinates = (element) => {\n  const { type, x1, y1, x2, y2 } = element;\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\n  } else {\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n      return { x1, y1, x2, y2 };\n    } else {\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\n    }\n  }\n};\n\nconst cursorForPosition = (position) => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n    default:\n      return \"move\";\n  }\n};\n\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const { x1, y1, x2, y2 } = coordinates;\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return { x1: clientX, y1: clientY, x2, y2 };\n    case \"tr\":\n      return { x1, y1: clientY, x2: clientX, y2 };\n    case \"bl\":\n      return { x1: clientX, y1, x2, y2: clientY };\n    case \"br\":\n    case \"end\":\n      return { x1, y1, x2: clientX, y2: clientY };\n    default:\n      return null;\n  }\n};\n\nconst useHistory = (initialState) => {\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n\n  const setState = (action, overwrite = false) => {\n    const newState =\n      typeof action === \"function\" ? action(history[index]) : action;\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex((prevState) => prevState + 1);\n    }\n  };\n\n  const undo = () => index > 0 && setIndex((prevState) => prevState - 1);\n  const redo = () =>\n    index < history.length - 1 && setIndex((prevState) => prevState + 1);\n\n  return [history[index], setState, undo, redo];\n};\n\nexport const resetCanvas = () => {\n  if (\n    window.confirm(\n      \"Are you sure you want to reset the canvas? This action is irrevertible!\"\n    )\n  ) {\n    window.location.reload(false);\n  } else {\n    return false;\n  }\n};\n\nexport const App = () => {\n  const [elements, setElements, undo, redo] = useHistory([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"pen\");\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const roughCanvas = rough.canvas(canvas);\n\n    elements.forEach(({ roughElement }) => roughCanvas.draw(roughElement));\n  }, [elements]);\n\n  useEffect(() => {\n    const undoRedoFunction = (event) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\n        if (event.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n  }, [undo, redo]);\n\n  const updateElement = (id, x1, y1, x2, y2, type) => {\n    const updatedElement = createElement(id, x1, y1, x2, y2, type);\n\n    const elementsCopy = [...elements];\n    elementsCopy[id] = updatedElement;\n    setElements(elementsCopy, true);\n  };\n\n  const handleMouseDown = (event) => {\n    const { clientX, clientY } = event;\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      if (element) {\n        const offsetX = clientX - element.x1;\n        const offsetY = clientY - element.y1;\n        setSelectedElement({ ...element, offsetX, offsetY });\n        setElements((prevState) => prevState);\n\n        if (element.position === \"inside\") {\n          setAction(\"moving\");\n        } else {\n          setAction(\"resize\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      const element = createElement(\n        id,\n        clientX,\n        clientY,\n        clientX,\n        clientY,\n        tool\n      );\n      setElements((prevState) => [...prevState, element]);\n      setSelectedElement(element);\n\n      setAction(\"drawing\");\n    }\n  };\n\n  const handleMouseMove = (event) => {\n    const { clientX, clientY } = event;\n\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      event.target.style.cursor = element\n        ? cursorForPosition(element.position)\n        : \"default\";\n    }\n\n    if (action === \"drawing\") {\n      const index = elements.length - 1;\n      const { x1, y1 } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n    } else if (action === \"moving\") {\n      const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\n      const width = x2 - x1;\n      const height = y2 - y1;\n      const newX1 = clientX - offsetX;\n      const newY1 = clientY - offsetY;\n      updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\n    } else if (action === \"resize\") {\n      const { id, type, position, ...coordinates } = selectedElement;\n      const { x1, y1, x2, y2 } = resizedCoordinates(\n        clientX,\n        clientY,\n        position,\n        coordinates\n      );\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (selectedElement) {\n      const index = selectedElement.id;\n      const { id, type } = elements[index];\n      if (action === \"drawing\" || action === \"resize\") {\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n    setAction(\"none\");\n    setSelectedElement(null);\n  };\n\n  return (\n    <React.Fragment>\n      <canvas\n        id=\"canvas\"\n        className=\"canva\"\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      ></canvas>\n      <div className=\"flex\">\n        <div className=\"content\">\n          <div className=\"tool-box unselectable\">\n            <div className=\"center-text\">Tools</div>\n            <label className=\"tool-sq\">\n              <input\n                autoFocus\n                className=\"btn btn-secondary active\"\n                type=\"radio\"\n                checked={tool === \"selection\"}\n                onChange={() => setTool(\"selection\")}\n              />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/cursor.png\"}\n              />\n            </label>\n            <label className=\"tool-sq\">\n              <input\n                type=\"radio\"\n                checked={tool === \"pen\"}\n                onChange={() => setTool(\"pen\")}\n              />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/pen.png\"}\n              />\n            </label>\n            <label className=\"tool-sq\">\n              <input\n                type=\"radio\"\n                checked={tool === \"line\"}\n                onChange={() => setTool(\"line\")}\n              />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/line.png\"}\n              />\n            </label>\n            <label className=\"tool-sq\">\n              <input\n                type=\"radio\"\n                checked={tool === \"rectangle\"}\n                onChange={() => setTool(\"rectangle\")}\n              />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/rectangle.png\"}\n              />\n            </label>\n            <label className=\"tool-sq\">\n              <input\n                type=\"radio\"\n                checked={tool === \"circle\"}\n                onChange={() => setTool(\"circle\")}\n              />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/circle.png\"}\n              />\n            </label>\n\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={resetCanvas} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/reset.png\"}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"tool-box-3 unselectable\">\n          <label className=\"tool-sq\">\n            <input type=\"radio\" onClick={undo} />\n            <img alt=\"selection tool\" className=\"tool\" src={\"/left/undo.png\"} />\n          </label>\n          <label className=\"tool-sq\">\n            <input type=\"radio\" onClick={redo} />\n            <img alt=\"selection tool\" className=\"tool\" src={\"/left/redo.png\"} />\n          </label>\n        </div>\n        <div className=\"tool-box-2 unselectable\">\n          <div> Width </div>\n          <div className=\"width-div\">\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={smallStroke} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/right/small.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={mediumStroke} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/right/medium.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={bigStroke} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/right/big.png\"}\n              />\n            </label>\n          </div>\n          <div>Colors</div>\n          <div className=\"width-div\">\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setBlack} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/black.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setWhite} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/white.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setRed} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/red.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setBlue} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/blue.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setGreen} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/green.png\"}\n              />\n            </label>\n            <label className=\"tool-sq last\">\n              <input type=\"radio\" onClick={setYellow} />\n              <img\n                alt=\"selection tool\"\n                className=\"tool\"\n                src={\"/left/colors/yellow.png\"}\n              />\n            </label>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}